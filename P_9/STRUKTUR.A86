;----------------------------------------------------
; CT Praktikum 9: Strukturierte Programmierung

;----------------------------------------------------
.MODEL small
.186

;------------  Initial Declarations  ----------------
LED_LOADDR              EQU     0700h
LED_HIADDR              EQU     0701h
SEG7_ADDR               EQU     0702h
DIP_SWITCH_LOADDR       EQU     0704h
DIP_SWITCH_HIADDR       EQU     0705h
KEYS_ADDR               EQU     0706h
DATA_DISPLAY_ADDR       EQU     0708h

LOW_NIBBLE_MASK         EQU     0Fh
KEY_B0                  EQU     1

;------------  code section  ------------------------
.CODE

start:          MOV     AX,@data          ; Load the start of the Data segment
                MOV     DS,AX             ; into the DS register
                NOP
                
                ; Variablen im Data definieren

endless:    
                MOV DX, KEYS_ADDR			; TO EINLESEN: Ein = 0
                IN AL, [DX]					; !!!!!nicht AX nehmen, würde 8 Bit von anderem Schalter noch nehmen
				OR AL, 11111110b			; NUR WERT T0 BLEIBT (8 BIT)
               
                
_if_t0_0:
				;TEST AL,000000001b			; Gübeli
				CMP AL, 0FEh				; TO GEDRÜCKT
				JE  gedrueckt



_else:			
				MOV DX, SEG7_ADDR			; Adresse 7-Segment
				MOV AL, 88h					; 88h = A	!!!! nicht AX, sonst anderen Schalter auch OUT geben			
				OUT [DX], AL
				JMP endless
				
				        
gedrueckt:      MOV DX, SEG7_ADDR			; Adresse 7-Segment	
				MOV AL, 86h					; 86 h = E				
				OUT [DX], AL				; 
				
                   				
elseT0:			;MOV DX, 701H
				;MOV AL, 00H
				;OUT [DX], AL				
             	


                JMP     endless

;----------------------------------------------------

;------------  data section  ------------------------
.DATA
t0				DB	0h	; Speichern Wert Taste t0 
bitmuster		DW	0h	;für Bitausgabe
;------------  stack section  ------------------------
.STACK 100h

;------------- end of program ------------------------
                END     start       ; start address for loader
